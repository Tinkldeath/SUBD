DROP DATABASE IF EXISTS musical_player;
CREATE DATABASE IF NOT EXISTS musical_player;

CREATE TABLE IF NOT EXISTS Genre (
	idGenre INTEGER PRIMARY KEY UNIQUE NOT NULL AUTO_INCREMENT,
    Title VARCHAR(45) NOT NULL
);
   
CREATE TABLE IF NOT EXISTS Artist (
	idArtist INTEGER PRIMARY KEY NOT NULL UNIQUE AUTO_INCREMENT,
    Name VARCHAR(45) NOT NULL
);

CREATE TABLE IF NOT EXISTS Album(
	idAlbum INTEGER PRIMARY KEY NOT NULL UNIQUE AUTO_INCREMENT,
	Title VARCHAR(45) NOT NULL,
    Artist_idArtist INT NOT NULL,
	
	CONSTRAINT albumArtist FOREIGN KEY(Artist_idArtist)
		REFERENCES Artist(idArtist)
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Track(
	idTrack INTEGER PRIMARY KEY NOT NULL UNIQUE AUTO_INCREMENT,
	Title VARCHAR(45) NOT NULL,
    Album_idAlbum INT NOT NULL,
	
	CONSTRAINT trackAlbum FOREIGN KEY(Album_idAlbum)
		REFERENCES Album(idAlbum)
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS User(
	idUser INTEGER PRIMARY KEY UNIQUE AUTO_INCREMENT NOT NULL,
	Login VARCHAR(45) NOT NULL,
	Password VARCHAR(45) NOT NULL,
    permission INT NOT NULL
);	

CREATE TABLE IF NOT EXISTS Playlist(
	idPlaylist INTEGER PRIMARY KEY UNIQUE AUTO_INCREMENT NOT NULL,
	Title VARCHAR(45) NOT NULL,
    User_idUser INT NOT NULL,
	
    CONSTRAINT idUser FOREIGN KEY (User_idUser)
    REFERENCES Users(idUser)
    ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Track_has_Genre(
	idTrack_has_Genre INTEGER PRIMARY KEY UNIQUE NOT NULL AUTO_INCREMENT,
	Track_idTrack INT,
	Genre_idGenre INT,
	
    CONSTRAINT genreTrack FOREIGN KEY (Track_idTrack)
    REFERENCES Track(idTrack)
    ON DELETE SET NULL,
    
    CONSTRAINT trackGenre FOREIGN KEY (Genre_idGenre)
    REFERENCES Genre(idGenre)
    ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Playlist_has_Track(
	idPlaylist_has_Track INTEGER PRIMARY KEY UNIQUE AUTO_INCREMENT,
	Playlist_idPlaylist INT,
	Track_idTrack INT,
	
    CONSTRAINT trackPlaylist FOREIGN KEY (Playlist_idPlaylist)
    REFERENCES Playlist(idPlaylist)
    ON DELETE SET NULL,
    
    CONSTRAINT playlistTrack FOREIGN KEY (Track_idTrack)
    REFERENCES Track(idTrack)
    ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Track_has_Artist(
	idTrack_has_Artist INTEGER PRIMARY KEY UNIQUE AUTO_INCREMENT,
	Track_idTrack INT,
	Artist_idArtist INT,
	
    CONSTRAINT trackArtist FOREIGN KEY (Track_idTrack)
    REFERENCES Track(idTrack)
    ON DELETE SET NULL,
    
    CONSTRAINT artistTrack FOREIGN KEY (Artist_idArtist)
    REFERENCES Artist(idArtist)
    ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Album_has_Track(
	idAlbum_has_Track INTEGER PRIMARY KEY UNIQUE AUTO_INCREMENT,
    Album_idAlbum INT,
	Track_idTrack INT,
    
	CONSTRAINT albumTrack FOREIGN KEY (Track_idTrack)
    REFERENCES Track(idTrack)
    ON DELETE SET NULL,
    
    CONSTRAINT trackAlbum FOREIGN KEY (Album_idAblum)
    REFERENCES Album(idAlbum)
    ON DELETE SET NULL
);